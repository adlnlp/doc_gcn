# -*- coding: utf-8 -*-
"""text_density_features.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1btBRE71adoGNmcP0rE3YnT9ZiCs72N-2
"""

import nltk
nltk.download('punkt')

def char_density(text_list,box_list):
  tem_list = []
  for t in range(len(text_list)):
    w = box_list[t][2]-box_list[t][0]
    h = box_list[t][3]-box_list[t][1]
    tem_list.append(len(text_list[t])/w*h)
  return tem_list

def char_density(text_list,box_list):
  tem_list = []
  for t in range(len(text_list)):
    w = box_list[t][2]-box_list[t][0]
    h = box_list[t][3]-box_list[t][1]
    tem_list.append([len(text_list[t])/w*h])
  return tem_list

def char_number(text_list):
  tem_list = []
  for t in range(len(text_list)):
    tem_list.append(len(text_list[t]))
  return tem_list

def char_number(text_list):
  tem_list = []
  for t in range(len(text_list)):
    tem_list.append([len(text_list[t])])
  return tem_list

def text_density(text_list,box_list):
  tem_list = []
  for t in range(len(text_list)):
    text = text_list[t]
    w = box_list[t][2]-box_list[t][0]
    h = box_list[t][3]-box_list[t][1]
    tokenized_text = nltk.word_tokenize(text)
    density = len(tokenized_text)/w*h
    tem_list.append(density)
  return tem_list

def text_density(text_list,box_list):
  tem_list = []
  for t in range(len(text_list)):
    text = text_list[t]
    w = box_list[t][2]-box_list[t][0]
    h = box_list[t][3]-box_list[t][1]
    tokenized_text = nltk.word_tokenize(text)
    density = len(tokenized_text)/w*h
    tem_list.append([density])
  return tem_list

def text_number(text_list):
  tem_list = []
  for t in range(len(text_list)):
    text = text_list[t]
    tokenized_text = nltk.word_tokenize(text)
    density = len(tokenized_text)
    tem_list.append(density)
  return tem_list

def text_number(text_list):
  tem_list = []
  for t in range(len(text_list)):
    text = text_list[t]
    tokenized_text = nltk.word_tokenize(text)
    density = len(tokenized_text)
    tem_list.append([density])
  return tem_list